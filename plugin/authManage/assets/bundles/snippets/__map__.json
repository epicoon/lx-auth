{"root":"1J4vj3_1nF23MA5_1","map":{"1J4vj3_1nF23MA5_1":{"key":"1J4vj3_1nF23MA5_1","path":"snippets\/_root.js","cache":"1J4vj3_1nF23MA5_1.json","dependencies":{"plugins":[{"name":"lx\/lx-model:relationManager","anchor":"1J4vj4_1","clientParams":{"models":["lx\/lx-auth.AuthRight","lx\/lx-auth.AuthRole"]}},{"name":"lx\/lx-model:relationManager","anchor":"1J4vj4_2","clientParams":{"models":["usertest.User","lx\/lx-auth.AuthRole"],"eventHandlers":{"start":"(core, condition0 = '', condition1 = '', page0 = 0, page1 = 0)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.getBaseInfo', [\n\t\t\tplugin.clientParams.userModel,\n\t\t\tcondition0,\n\t\t\tcondition1,\n\t\t\t[\n\t\t\t\t{page: page0, count: core.modelData0.perPage},\n\t\t\t\t{page: page1, count: core.modelData1.perPage}\n\t\t\t]\n\t\t]).send().then((res)=>{\n\t\t\tcore.modelData0.list = lx.ModelCollection.create(res.users);\n\t\t\tcore.modelData1.list = lx.ModelCollection.create(res.roles);\n\t\t\tcore.relations = res.relations;\n\n\t\t\tcore.plugin.root.getSide(0).find('pager').elementsPerPage = core.modelData0.perPage;\n\t\t\tcore.plugin.root.getSide(1).find('pager').elementsPerPage = core.modelData1.perPage;\n\t\t\tcore.plugin.root.getSide(0).find('pager').setElementsCount(res.usersCount);\n\t\t\tcore.plugin.root.getSide(1).find('pager').setElementsCount(res.rolesCount);\n\n\t\t\tcore.plugin.eventManager.trigger('fillBody');\n\t\t});","createRelation":"(core, modelName0, pk0, modelName1, pk1)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.createRelation', [\n\t\t\tmodelName0, pk0, modelName1, pk1\n\t\t]).send().then((res)=>{\n\t\t\tcore.onCreateRelation(modelName0, pk0, modelName1, pk1);\n\t\t});","deleteRelation":"(core, modelName0, pk0, modelName1, pk1)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.deleteRelation', [\n\t\t\tmodelName0, pk0, modelName1, pk1\n\t\t]).send().then((res)=>{\n\t\t\tcore.onCreateRelation(modelName0, pk0, modelName1, pk1);\n\t\t});","createModel":"(core, modelData, fields, callback)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.createModel', [modelData.fullname, fields]).send().then(callback);","deleteModel":"(core, modelData, index, callback)=>var plugin = core.plugin.parent;\n\t\tvar pk = modelData.list.at(index).getPk();\n\t\tplugin.ajax('UserRole.deleteModel', [modelData.fullname, pk]).send().then(callback);"}}}],"modules":["lx.Box","lx.MultiBox","lx.Rect","lx.TextBox","lx.Textarea","lx.Input"]},"files":["\/home\/lx\/webprj\/lx.loc\/vendor\/lx\/lx-auth\/plugin\/authManage\/snippets\/eventHandlers\/userRole.js"],"snippets":[]}},"dependencies":{"plugins":[{"name":"lx\/lx-model:relationManager","anchor":"1J4vj4_1","clientParams":{"models":["lx\/lx-auth.AuthRight","lx\/lx-auth.AuthRole"]}},{"name":"lx\/lx-model:relationManager","anchor":"1J4vj4_2","clientParams":{"models":["usertest.User","lx\/lx-auth.AuthRole"],"eventHandlers":{"start":"(core, condition0 = '', condition1 = '', page0 = 0, page1 = 0)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.getBaseInfo', [\n\t\t\tplugin.clientParams.userModel,\n\t\t\tcondition0,\n\t\t\tcondition1,\n\t\t\t[\n\t\t\t\t{page: page0, count: core.modelData0.perPage},\n\t\t\t\t{page: page1, count: core.modelData1.perPage}\n\t\t\t]\n\t\t]).send().then((res)=>{\n\t\t\tcore.modelData0.list = lx.ModelCollection.create(res.users);\n\t\t\tcore.modelData1.list = lx.ModelCollection.create(res.roles);\n\t\t\tcore.relations = res.relations;\n\n\t\t\tcore.plugin.root.getSide(0).find('pager').elementsPerPage = core.modelData0.perPage;\n\t\t\tcore.plugin.root.getSide(1).find('pager').elementsPerPage = core.modelData1.perPage;\n\t\t\tcore.plugin.root.getSide(0).find('pager').setElementsCount(res.usersCount);\n\t\t\tcore.plugin.root.getSide(1).find('pager').setElementsCount(res.rolesCount);\n\n\t\t\tcore.plugin.eventManager.trigger('fillBody');\n\t\t});","createRelation":"(core, modelName0, pk0, modelName1, pk1)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.createRelation', [\n\t\t\tmodelName0, pk0, modelName1, pk1\n\t\t]).send().then((res)=>{\n\t\t\tcore.onCreateRelation(modelName0, pk0, modelName1, pk1);\n\t\t});","deleteRelation":"(core, modelName0, pk0, modelName1, pk1)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.deleteRelation', [\n\t\t\tmodelName0, pk0, modelName1, pk1\n\t\t]).send().then((res)=>{\n\t\t\tcore.onCreateRelation(modelName0, pk0, modelName1, pk1);\n\t\t});","createModel":"(core, modelData, fields, callback)=>var plugin = core.plugin.parent;\n\t\tplugin.ajax('UserRole.createModel', [modelData.fullname, fields]).send().then(callback);","deleteModel":"(core, modelData, index, callback)=>var plugin = core.plugin.parent;\n\t\tvar pk = modelData.list.at(index).getPk();\n\t\tplugin.ajax('UserRole.deleteModel', [modelData.fullname, pk]).send().then(callback);"}}}],"modules":["lx.Box","lx.MultiBox","lx.Rect","lx.TextBox","lx.Textarea","lx.Input"]}}